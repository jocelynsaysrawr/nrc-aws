---
# tasks file for roles/vpc

- name: Create AWS VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ aws_region }}"
    state: present
  register: nrc_vpc

- name: "Set fact: vpc_id"
  set_fact:
    vpc_id: "{{ nrc_vpc.vpc.id }}"

# Iterate over vpc_subnets dictionary
- name: Create public subnets accross all availability zones
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ item.value.cidr }}"
    az: "{{ item.value.az }}"
    region: "{{ aws_region }}"
    state: present
    tags:
      Name: "{{ item.key }}"
  with_dict: "{{ public_vpc_subnets }}"
  register: public_nrc_subnets

- name: "Set fact: VPC public subnet IDs"
  set_fact:
    public_vpc_subnet_ids: "{{ public_vpc_subnet_ids | default({}) | combine({ item.subnet.tags.Name: item.subnet.id }) }}"
  loop: "{{ public_nrc_subnets.results }}"

- name: Create private subnets accross all availability zones
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ item.value.cidr }}"
    az: "{{ item.value.az }}"
    region: "{{ aws_region }}"
    state: present
    tags:
      Name: "{{ item.key }}"
  with_dict: "{{ private_vpc_subnets }}"
  register: private_nrc_subnets

- name: "Set fact: VPC private subnet IDs"
  set_fact:
    private_vpc_subnet_ids: "{{ private_vpc_subnet_ids | default({}) | combine({ item.item.value.az: item.subnet.id }) }}"
  loop: "{{ private_nrc_subnets.results }}"

- name: Create Internet Gateway
  ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    state: present
    tags:
      Name: NRC IGW
  register: nrc_igw

- name: Create NAT Gateway in each public subnet
  ec2_vpc_nat_gateway:
    if_exist_do_not_create: yes
    subnet_id: "{{ item.subnet.id }}"
    region: "{{ aws_region }}"
    state: present
    wait: yes
  loop: "{{ public_nrc_subnets.results }}"
  register: nrc_nat_gateways

- name: Create Route Table for Public Subnets
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ nrc_igw.gateway_id }}"
    subnets:
      - "{{ public_vpc_subnet_ids['public-subnet-AZ-A'] }}"
      - "{{ public_vpc_subnet_ids['public-subnet-AZ-B'] }}"
      - "{{ public_vpc_subnet_ids['public-subnet-AZ-C'] }}"
      - "{{ public_vpc_subnet_ids['public-subnet-AZ-D'] }}"
    tags:
      Name: NRC Public Subnet Route Table

- name: "Set fact: nat_gateways"
  set_fact:
    nat_gateways: "{{ nat_gateways | default({}) | combine({ item.item.item.value.az: item.nat_gateway_id }) }}"
  loop: "{{ nrc_nat_gateways.results }}"

- name: Create Route Table for Private Subnets
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ item.value }}"
    subnets:
      - "{{ private_vpc_subnet_ids[item.key] }}"
    tags:
      Name: "{{ item.key }} NAT Route Table"
  with_dict: "{{ nat_gateways }}"
